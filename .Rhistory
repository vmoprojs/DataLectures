xn_sol <- rep(NA,n)
xn_sol[1] <- c(x0)
xn_sol[2] <- c(x1)
for(i in 3:n)
{
xn_sol[i] <- xn_sol[i-1]+xn_sol[i-2]
}
return(list (Fibo = xn_sol, sFibo = sum(xn_sol)))
}
fibo(10)
A
A[1]
A[[1]]
class(A[1])
class(A[[1]])
A[1]*2
A[[1]]*2
y <- 26
contador <- 1
while(y >= 0){
y <- y - 1
contador <- contador +1
}
contador
x <- c(5, -2, 9, 5, 7, -3, 4, 10, 4)
x[[1]]
x[<0]
x[[<0]]
x[x[<0]]
x[x<0]
x[x<0] <- 0
x <- c(5, -2, 9, 5, 7, -3, 4, 10, 4)
x[which(x<0)] <- 0
x
x <- c(5, -2, 9, 5, 7, -3, 4, 10, 4)
x[which(x<0)] <- 0
x
x <- c(5, -2, 9, 5, 7, -3, 4, 10, 4)
x[(x<0)] <- 0
x
x <- c (1,3, 5) ; y <- c (3, 2, 10)
cbind(x,y)
?apply
log(-1)
sample(1:6)
sample(1:6)
sample(1:6)
xx <- c(1803590213,912459834)
xx
nchar(xx)
xx <- c("1803590213","912459834")
nchar(xx)
uu <- "https://raw.githubusercontent.com/vmoprojs/DataLectures/master/tweets_CrisisCarcelaria.RData"
load(url(uu))
View(tweets)
View(tweets)
View(tweets)
nchar(tweets$text)
table(nchar(tweets$text)<100)
table(nchar(tweets$text)<=100)
table(nchar(tweets$text)<=280)
table(nchar(tweets$text)<=140)
nchar(tweets$text)
length(nchar(tweets$text))
head(nchar(tweets$text))
table(nchar(tweets$text)<=140)
table(nchar(tweets$text)<=140)
table(nchar(tweets$text)<=280)
nchar(tweets$text)<=280
sum(nchar(tweets$text)<=280)
table(nchar(tweets$text)<=280)
subset.doc <- subset(tweets,tweets$retweet_count>100)
tweets$ncharacteres <- nchar(tweets$text)
subset.doc1 <- subset(tweets,tweets$ncharacteres<=140)
x <- c("ola q ace")
x
sub("q",'que',x, ignore.case=T)
x <- c("ola q ace")
sub("q",'que',x, ignore.case=F)
x <- c("ola Q ace")
sub("q",'que',x, ignore.case=F)
sub("q",'que',x, ignore.case=T)
x <- c("ola Q ace")
sub("q",'que',x, ignore.case=TRUE)
x <- c("ola Q ace")
sub("q",'que',x, ignore.case=FALSE)
tweets$text[1:5]
sub('Ecuador',' El país medallista ',tweets$text[1:5], ignore.case=T)
sub('ECUADOR',' El país medallista ',tweets$text[1], ignore.case=T)
sub('Ecuador',' El país medallista ',tweets$text[1], ignore.case=T)
tweets$text[1]
sub('ECUADOR',' El país medallista ',tweets$text[1], ignore.case=F)
sub('ECUADOR',' El país medallista ',tweets$text[1], ignore.case=F)
sub('ecuador',' El país medallista ',tweets$text[1], ignore.case=F)
tweets$text[1]
sub('ECUADOR',' El país medallista ',tweets$text[1], ignore.case=F)
sub('Ecuador',' El país medallista ',tweets$text[1], ignore.case=F)
sub('ecuador',' El país medallista ',tweets$text[1], ignore.case=F)
sub('ECUADOR',' El país medallista ',tweets$text[1], ignore.case=TRUE)
sub('ECUADOR',' El país medallista ',tweets$text[1], ignore.case=FALSE)
fake.text <- 'minería de texto en R es bueno, pero la minería
de texto en Python también'
fake.text
fake.text <- 'minería de texto en R es bueno, pero la minería de texto en Python también'
fake.text
sub('Minería de texto','tm', fake.text, ignore.case=TRUE)
gsub('Minería de texto','tm', fake.text, ignore.case=TRUE)
gsub('ecuador',' El país medallista ',tweets$text[1], ignore.case=F)
gsub('ecuador',' El país medallista ',tweets$text[1], ignore.case=TRUE)
fake.text <- 'minería de texto en R es bueno, pero la minería de texto en Python también'
sub('Minería de texto','tm', fake.text, ignore.case=TRUE)
fake.text <- 'minería de texto en R es bueno, pero la minería de texto en Python también'
sub('Minería de texto','tm', fake.text, ignore.case=TRUE)
gsub('Minería de texto','tm', fake.text, ignore.case=TRUE)
gsub('ecuador',' El país medallista ',tweets$text[1], ignore.case=TRUE)
gsub('@LassoGuillermo','',tweets$text[1:3])
gsub('[[:punct:]]','',tweets$text[1:3])
tweets$text[1:3]
gsub('[:blank:]','',tweets$text[1:3])
gsub('[:blank:]','',tweets$text[1])
tweets$text[1]
gsub('[[:blank:]]','',tweets$text[1])
tweets$text[1]
gsub('[:blank:]','',tweets$text[1])
gsub('[[:blank:]]','',tweets$text[1])
library(qdap)
fake.text
fake.text
patterns <- c('bueno','sin duda!','minería de texto')
replacements <- c('excelente','just as suitable','tm')
gsub(patterns,replacements,fake.text)
x <- c("a","b","c")
y <- c("1","2","3")
paste(x,y)
paste(x,y,sep = "-")
paste(x,y,sep = "")
x <- c("18","b","c")
y <- c("05","2","3")
paste(x,y,sep = "")
# cuantos user_id unicos tengo?
unique(tweets$user_id)
# cuantos user_id unicos tengo?
length(unique(tweets$user_id))
nrow(tweets)/7152
aux <- paste(tweets$user_id,tweets$status_id,sep = "-")
length(unique(aux))
View(tweets)
length(unique(tweets$status_id)) #7152
View(tweets)
paste(x,y,collapse  = "")
x <- c("18","b","c")
y <- c("05","2","3")
paste(x,y,collapse  = "")
paste(x,y,sep  = "")
paste(x,y,sep  = "-")
paste(x,y,collapse  = "")
tweets$created_at
as.Date(tweets$created_at)
tweets$fecha <- as.Date(tweets$created_at)
x <- "Es fácil mentir con estadísticas, pero es más fácil mentir sin ellas"
hash <- strsplit(x,'[,]')
hash
nchar(hash)
nchar(hash[[1]])
hash[[1]]
hash
nchar(hash[[1]])
hash[[1]]
nchar(hash[[1]])
substring('La minería de texto en R es bacán',29,33)
"Ecuador está en la mitad del mundo"
"Ecuador está en la mitad del mundo"
n = 3
print("ndo")
print("mundo")
print(" mundo")
library(tm)
removeSparseTerms()
?removeSparseTerms
library(qdap)
head(key.pol)
library(tm)
library(qdap)
library(wordcloud)
library(ggplot2)
library(ggthemes)
uu <- "https://raw.githubusercontent.com/vmoprojs/DataLectures/master/power.txt"
datos <- readLines(uu)
df <- data.frame(data = datos)
new.pos <- c('rofl','lol')
old.pos <- subset(as.data.frame(key.pol),key.pol$y==1)
all.pos <- c(new.pos,old.pos[,1])
new.neg <- c('kappa','meh')
old.neg <- subset(as.data.frame(key.pol),key.pol$y==-1)
all.neg <- c(new.neg,old.neg[,1])
all.polarity <- sentiment_frame(all.pos,all.neg,1,-1)
all.polarity
polarity('ROFL, look at that!',polarity.frame=all.polarity)
polarity('ROFL, look at that!')
1/4
1/2
?polarity
polarity
all.polarity
all.polarity %in% "look"
str(all.polarity)
all.polarity$x %in% "look"
sum(all.polarity$x %in% "look")
sum(all.polarity$x %in% "at")
sum("at"%in% all.polarity$x )
sum("look"%in% all.polarity$x )
all.polarity$x
sort(all.polarity$x)
View(sort(all.polarity$x))
View(all.polarity)
str(all.polarity)
as.data.frame(all.polarity)$x
sum("look"%in% as.data.frame(all.polarity)$x )
View(as.data.frame(all.polarity)$x)
all.polarity
View(all.polarity)
table(key.pol$y)
table(key.pol$y)
View(key.pol)
old.pos <- subset(as.data.frame(key.pol),key.pol$y==1)
old.pos
old.pos[,1]
new.neg <- c('kappa','meh')
old.neg <- subset(as.data.frame(key.pol),key.pol$y==-1)
all.neg <- c(new.neg,old.neg[,1])
library(qdap)
head(key.pol)
View(key.pol)
new.pos <- c('rofl','lol')
old.pos <- subset(as.data.frame(key.pol),key.pol$y==1)
all.pos <- c(new.pos,old.pos[,1])
new.neg <- c('kappa','meh')
old.neg <- subset(as.data.frame(key.pol),key.pol$y==-1)
all.neg <- c(new.neg,old.neg[,1])
all.polarity <- sentiment_frame(all.pos,all.neg,1,-1)
polarity('ROFL, look at that!',polarity.frame=all.polarity)
polarity('ROFL, look at that!',polarity.frame=all.polarity)
polarity('ROFL, look at that!',polarity.frame = key.pol)
View(key.pol)
polarity('ROFL, look at that abound!',polarity.frame=all.polarity)
polarity('ROFL, look at that abound!',polarity.frame = key.pol)
polarity('ROFL, look at that!',polarity.frame=all.polarity)
polarity('ROFL, look at that!',polarity.frame = key.pol)
0/sqrt(4)
1/sqrt(4)
polarity('ROFL, look at that abound!',polarity.frame=all.polarity)
polarity('ROFL, look at that abound!',polarity.frame = key.pol)
2/sqrt(5)
1/sqrt(5)
polarity('meh, not today my friend',polarity.frame=all.polarity)
polarity('MEH, not today my friend',polarity.frame=all.polarity)
library(tm)
library(qdap)
library(wordcloud)
library(ggplot2)
library(ggthemes)
uu <- "https://raw.githubusercontent.com/vmoprojs/DataLectures/master/power.txt"
datos <- readLines(uu)
df <- data.frame(data = datos)
View(df)
df$data
bos.pol <- polarity(df$data)
polarity('meh, not today my friend',polarity.frame=all.polarity)
polarity('MEH, not today my friend',polarity.frame=all.polarity)
polarity('meh, not today my friend meh',polarity.frame=all.polarity)
polarity('meh, not today my friend meh meh',polarity.frame=all.polarity)
polarity('meh, not today my friend abound',polarity.frame=all.polarity)
polarity('meh, not today my friend abound abound',polarity.frame=all.polarity)
polarity('meh, not today my friend abound',polarity.frame=all.polarity)
0/sqrt(6)
polarity('meh, not today abound my friend abound',polarity.frame=all.polarity)
1/sqrt(7)
polarity('abound, not today meh my friend meh',polarity.frame=all.polarity)
polarity('meh, not today abound my friend abundant',polarity.frame=all.polarity)
polarity('meh, not today abound my friend abundant',polarity.frame=all.polarity)
polarity('abound, not today meh my friend meh',polarity.frame=all.polarity)
1/sqrt(7)
hist(bos.pol)
hist(bos.pol$all)
hist(bos.pol$all$polarity)
summary(bos.pol$all$polarity)
df$polarity<- scale(bos.pol$all$polarity)
hist(df$polarity)
pos.comments <- subset(df$data, df$polarity>0)
neg.comments <- subset(df$data, df$polarity<0)
pos.comments
names(df)
head(pos.comments)
head(neg.comments)
pos.comments <- subset(df$data, df$polarity>3)
neg.comments <- subset(df$data, df$polarity<-3)
head(pos.comments)
df$polarity
pos.comments <- subset(df$data, df$polarity>=3)
neg.comments <- subset(df$data, df$polarity<=-3)
head(pos.comments)
head(neg.comments)
df$polarity<- scale(bos.pol$all$polarity)
hist(df$polarity)
pos.comments <- subset(df$data, df$polarity>=3)
neg.comments <- subset(df$data, df$polarity<=-3)
head(pos.comments)
head(neg.comments)
summary(df$polarity)
df$data[which.max(df$polarity)]
df$data[which.min(df$polarity)]
head(df$data)
head(all.corpus)
pos.comments <- subset(df$data, df$polarity>0)
neg.comments <- subset(df$data, df$polarity<0)
head(pos.comments)
head(neg.comments)
pos.terms <- paste(pos.comments,collapse = " ")
neg.terms <- paste(neg.comments,collapse = " ")
all.terms <- c(pos.terms,neg.terms)
all.corpus <- VCorpus(VectorSource(all.terms))
all.tdm <- TermDocumentMatrix(all.corpus, control=list(weighting=weightTfIdf, removePunctuation = TRUE,stopwords=stopwords(kind='en')))
all.tdm
length(all.terms)
length(pos.terms)
pos.terms
all.tdm.m <- as.matrix(all.tdm)
colnames(all.tdm.m)<-c('positive','negative')
head(all.tdm.m)
comparison.cloud(all.tdm.m, max.words=100)
comparison.cloud(all.tdm.m, max.words=100)
warnings
warnings()
comparison.cloud(all.tdm.m, max.words=10)
comparison.cloud(all.tdm.m, max.words=20)
comparison.cloud(all.tdm.m, max.words=50)
comparison.cloud(all.tdm.m, max.words=50,cex = 0.1)
comparison.cloud(all.tdm.m, max.words=10)
comparison.cloud(all.tdm.m, max.words=50)
comparison.cloud(all.tdm.m, max.words=10)
comparison.cloud(all.tdm.m, max.words=20)
?comparison.cloud
comparison.cloud(all.tdm.m, max.words=20,
scale = c(0.1,0.1))
comparison.cloud(all.tdm.m, max.words=100,
scale = c(0.5,0.5))
comparison.cloud(all.tdm.m, max.words=100,
scale = c(0.5,1))
comparison.cloud(all.tdm.m, max.words=100,
scale = c(0.1,1))
comparison.cloud(all.tdm.m, max.words=500,
scale = c(0.1,1))
head(key.pol)
uu <- "https://raw.githubusercontent.com/JoseCardonaFigueroa/sentiment-analysis-spanish/master/data/subjectivity.csv"
df_c <- read.csv(uu)
df_c
head(df_c)
df_c <- df_c[,c("termino","polaridad")]
df_c
df_c$polaridad[which(df_c$polaridad=="positive")]
df_c <- df_c[,c("termino","polaridad")]
df_c$polaridad[which(df_c$polaridad=="positive")] = 1
df_c$polaridad[which(df_c$polaridad=="negative")] = -1
df_c
head(df_c)
head(key.pol)
uu <- "https://raw.githubusercontent.com/JoseCardonaFigueroa/sentiment-analysis-spanish/master/data/subjectivity.csv"
df_c <- read.csv(uu)
df_c <- df_c[,c("termino","polaridad")]
df_c$termino[which(df_c$polaridad=="positive")]
df_c <- df_c[,c("termino","polaridad")]
all.pos <- df_c$termino[which(df_c$polaridad=="positive")]
all.neg <- df_c$termino[which(df_c$polaridad=="negative")]
key_spanish <- sentiment_frame(all.pos,all.neg,1,-1)
head(key_spanish)
View(key_spanish)
setwd("~/Documents/Consultorias&Cursos/DataLectures")
uu <- "grupo_chat.txt"
library("rwhatsapp")
df <- rwa_read(uu)
head(df)
df <- data.frame(text = df$text)
names(df)[1] <- "text"
df$text <- gsub("imagen","",df$text)
df$text <- gsub("omitida","",df$text)
df$text <- gsub("omitido","",df$text)
lexi <- read.csv("https://raw.githubusercontent.com/JoseCardonaFigueroa/sentiment-analysis-spanish/master/data/subjectivityStemming2.csv")
table(lexi$negative)
posi <- lexi[which(lexi$negative=="positive"),1]
posi <- data.frame(x = posi,y = 1)
nega <- lexi[which(lexi$negative=="negative"),1]
nega <- data.frame(x = nega,y = 0)
todos <- rbind(posi,nega)
bos.pol <- polarity(df$text,polarity.frame=todos)
df$polarity<- scale(bos.pol$all$polarity)
hist(df$polarity)
df$polarity
df$text[which.max(df$polarity)]
df$text[which.min(df$polarity)]
summary(df$polarity)
setwd("~/Documents/Consultorias&Cursos/DataLectures")
uu <- "grupo_chat.txt"
library("rwhatsapp")
df <- rwa_read(uu)
head(df)
df <- data.frame(text = df$text)
names(df)[1] <- "text"
df$text <- gsub("imagen","",df$text)
df$text <- gsub("omitida","",df$text)
df$text <- gsub("omitido","",df$text)
bos.pol <- polarity(df$text,polarity.frame=key_spanish)
df$polarity<- scale(bos.pol$all$polarity)
hist(df$polarity)
df$text[which.min(df$polarity)]
df$text[which.max(df$polarity)]
?sentiment_frame
hist(df$polarity)
df$text[which.min(df$polarity>3)]
df$text[which.max(df$polarity<-3)]
df$text[which.min(df$polarity>3)]
df$text[which(df$polarity>3)]
df$text[which(df$polarity<-3)]
which(df$polarity>3)
which(df$polarity>=3)
df$text[which(df$polarity>=3)]
df$text[which(df$polarity<=-3)]
df$text[which(df$polarity>=5)]
df$text[which(df$polarity>=4)]
df$text[which(df$polarity>=3.5)]
df$text[which(df$polarity>=3)]
View(df$text[which(df$polarity>=3)])
View(data.frame(df$text[which(df$polarity>=3)]))
df$text[which(df$polarity<=-3)]
View(data.frame(df$text[which(df$polarity<=-3)]))
View(data.frame(df$text[which(df$polarity<=-1)]))
View(data.frame(df$text[which(df$polarity<0)]))
summary(df$polarity)
bos.pol <- polarity(df$text,polarity.frame=key_spanish)
df$polarity<- scale(bos.pol$all$polarity)
hist(df$polarity)
View(data.frame(df$text[which(df$polarity>=3)]))
View(data.frame(df$text[which(df$polarity<-3)]))
which(df$polarity<-3)
View(data.frame(df$text[which(df$polarity<(-3))]))
summary(df$polarity)
bos.pol <- polarity(df$text,polarity.frame=key_spanish)
df$polarity<- scale(bos.pol$all$polarity)
hist(df$polarity)
summary(df$polarity)
lexi <- read.csv("https://raw.githubusercontent.com/JoseCardonaFigueroa/sentiment-analysis-spanish/master/data/subjectivityStemming2.csv")
table(lexi$negative)
df$polarity
as.numeric(df$polarity)
View(data.frame(df$text[which(as.numeric(df$polarity)>=3)]))
View(data.frame(df$text[which(as.numeric(df$polarity)<(-3))]))
edad <- c(37,28,27,46,30,50)
ecdf(edad)
ff <- ecdf(edad)
ff(30)
ff(40)
ff(40) # cual es prob de que una persona tenga 40 años o menos
data("mtcars")
head(mtcars)
ff1 <- ecdf(mtcars$mpg)
ff1(30)
quantile(mtcars$mpg, probs = 0.875)
round(quantile(mtcars$mpg, probs = 0.875))
(quantile(mtcars$mpg, probs = 0.875)
ff1(30) # probabilidad de que un auto tenga hasta 30 mpg
quantile(mtcars$mpg, probs = 0.875)
quantile(mtcars$mpg, probs = 0.875)
ff1(30) # probabilidad de que un auto tenga hasta 30 mpg
?dnorm
?beta
?Chisquare
quantile(mtcars$mpg, probs = 0.875)
mu <- 36.3
ss <- 9.8
# cual es prob de que una persona tenga 40 años o menos?
pnorm(40,mean =mu, sd = ss)
# hasta cuandos años tiene el 64.71179% de la poblacion?
qnorm(40,mean =mu, sd = ss)
# hasta cuandos años tiene el 64.71179% de la poblacion?
qnorm(.6471179,mean =mu, sd = ss)
# cual es prob de que una persona tenga 40 años o menos?
pnorm(40,mean =mu, sd = ss)
# hasta cuandos años tiene el 64.71179% de la poblacion?
qnorm(.6471179,mean =mu, sd = ss)
mu1 <- mean(mtcars$mpg)
ss1 <- sd(mtcars$mpg)
mu1 <- mean(mtcars$mpg)
ss1 <- sd(mtcars$mpg)
pnorm(30,mean =mu, sd = ss)
qnorm(0.2601584,mean =mu, sd = ss)
curve(dnorm(x),xlim = c(-3,3))
curve(dnorm(x),xlim = c(-4,4))
par(mfrow ( c(3,1)))
par(mfrow= ( c(3,1)))
curve(dnorm(x),xlim = c(-4,4)) #densidad
curve(pnorm(x),xlim = c(-4,4)) # acumulada
curve(qnorm(x),xlim = c(0,1)) # cuantil
par(mfrow ( c(1,1)))
par(mfrow= ( c(3,1)))
curve(dnorm(x),xlim = c(-4,4)) #densidad
curve(pnorm(x),xlim = c(-4,4)) # acumulada
curve(qnorm(x),xlim = c(0,1)) # cuantil
par(mfrow =( c(1,1)))
par(mfrow= ( c(3,1)))
curve(dnorm(x),xlim = c(-4,4),main = "densidad") #densidad
curve(pnorm(x),xlim = c(-4,4),main = "acumulada") # acumulada
curve(qnorm(x),xlim = c(0,1),main = "cuantil") # cuantil
par(mfrow =( c(1,1)))
